/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_ADX_Params_{{ Timeframe }} : ADXParams {
  Indi_ADX_Params_{{ Timeframe }}() : ADXParams(indi_adx_defaults, PERIOD_{{ Timeframe }}) {
    period = {{ ADX_Indi_ADX_Period | default(0) }};
    shift = {{ ADX_Indi_ADX_Shift | default(0) }};
  }
} indi_adx_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_ADX_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_ADX_Params_{{ Timeframe }}() : StgParams(stg_adx_defaults) {
    lot_size = {{ ADX_LotSize | default(0) }};
    signal_open_method = {{ ADX_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ ADX_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ ADX_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ ADX_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ ADX_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ ADX_SignalCloseLevel | default(0) }};
    price_stop_method = {{ ADX_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ ADX_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ ADX_TickFilterMethod  | default(1) }};
    max_spread = {{ ADX_MaxSpread | default(0) }};
  }
} stg_adx_{{ Timeframe | lower }};
